//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:/Dev/C#/KCC/Antlr\kcc.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="kccParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface IkccListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.rule_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRule_set([NotNull] kccParser.Rule_setContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.rule_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRule_set([NotNull] kccParser.Rule_setContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.single_rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingle_rule([NotNull] kccParser.Single_ruleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.single_rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingle_rule([NotNull] kccParser.Single_ruleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] kccParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] kccParser.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.conclusion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConclusion([NotNull] kccParser.ConclusionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.conclusion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConclusion([NotNull] kccParser.ConclusionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LogicalEntity</c>
	/// labeled alternative in <see cref="kccParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalEntity([NotNull] kccParser.LogicalEntityContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LogicalEntity</c>
	/// labeled alternative in <see cref="kccParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalEntity([NotNull] kccParser.LogicalEntityContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ComparisonExpression</c>
	/// labeled alternative in <see cref="kccParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonExpression([NotNull] kccParser.ComparisonExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ComparisonExpression</c>
	/// labeled alternative in <see cref="kccParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonExpression([NotNull] kccParser.ComparisonExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LogicalExpressionInParen</c>
	/// labeled alternative in <see cref="kccParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalExpressionInParen([NotNull] kccParser.LogicalExpressionInParenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LogicalExpressionInParen</c>
	/// labeled alternative in <see cref="kccParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalExpressionInParen([NotNull] kccParser.LogicalExpressionInParenContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LogicalExpressionAnd</c>
	/// labeled alternative in <see cref="kccParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalExpressionAnd([NotNull] kccParser.LogicalExpressionAndContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LogicalExpressionAnd</c>
	/// labeled alternative in <see cref="kccParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalExpressionAnd([NotNull] kccParser.LogicalExpressionAndContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LogicalExpressionOr</c>
	/// labeled alternative in <see cref="kccParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalExpressionOr([NotNull] kccParser.LogicalExpressionOrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LogicalExpressionOr</c>
	/// labeled alternative in <see cref="kccParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalExpressionOr([NotNull] kccParser.LogicalExpressionOrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.body_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBody_expr([NotNull] kccParser.Body_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.body_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBody_expr([NotNull] kccParser.Body_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ComparisonExpressionWithOperator</c>
	/// labeled alternative in <see cref="kccParser.comparison_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonExpressionWithOperator([NotNull] kccParser.ComparisonExpressionWithOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ComparisonExpressionWithOperator</c>
	/// labeled alternative in <see cref="kccParser.comparison_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonExpressionWithOperator([NotNull] kccParser.ComparisonExpressionWithOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ComparisonExpressionParens</c>
	/// labeled alternative in <see cref="kccParser.comparison_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonExpressionParens([NotNull] kccParser.ComparisonExpressionParensContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ComparisonExpressionParens</c>
	/// labeled alternative in <see cref="kccParser.comparison_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonExpressionParens([NotNull] kccParser.ComparisonExpressionParensContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.comparison_operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparison_operand([NotNull] kccParser.Comparison_operandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.comparison_operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparison_operand([NotNull] kccParser.Comparison_operandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.comp_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComp_operator([NotNull] kccParser.Comp_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.comp_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComp_operator([NotNull] kccParser.Comp_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ArithmeticExpressionMult</c>
	/// labeled alternative in <see cref="kccParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticExpressionMult([NotNull] kccParser.ArithmeticExpressionMultContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArithmeticExpressionMult</c>
	/// labeled alternative in <see cref="kccParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticExpressionMult([NotNull] kccParser.ArithmeticExpressionMultContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ArithmeticExpressionMinus</c>
	/// labeled alternative in <see cref="kccParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticExpressionMinus([NotNull] kccParser.ArithmeticExpressionMinusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArithmeticExpressionMinus</c>
	/// labeled alternative in <see cref="kccParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticExpressionMinus([NotNull] kccParser.ArithmeticExpressionMinusContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ArithmeticExpressionParens</c>
	/// labeled alternative in <see cref="kccParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticExpressionParens([NotNull] kccParser.ArithmeticExpressionParensContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArithmeticExpressionParens</c>
	/// labeled alternative in <see cref="kccParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticExpressionParens([NotNull] kccParser.ArithmeticExpressionParensContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ArithmeticExpressionNumericEntity</c>
	/// labeled alternative in <see cref="kccParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticExpressionNumericEntity([NotNull] kccParser.ArithmeticExpressionNumericEntityContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArithmeticExpressionNumericEntity</c>
	/// labeled alternative in <see cref="kccParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticExpressionNumericEntity([NotNull] kccParser.ArithmeticExpressionNumericEntityContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ArithmeticExpressionDiv</c>
	/// labeled alternative in <see cref="kccParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticExpressionDiv([NotNull] kccParser.ArithmeticExpressionDivContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArithmeticExpressionDiv</c>
	/// labeled alternative in <see cref="kccParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticExpressionDiv([NotNull] kccParser.ArithmeticExpressionDivContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ArithmeticExpressionPlus</c>
	/// labeled alternative in <see cref="kccParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticExpressionPlus([NotNull] kccParser.ArithmeticExpressionPlusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArithmeticExpressionPlus</c>
	/// labeled alternative in <see cref="kccParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticExpressionPlus([NotNull] kccParser.ArithmeticExpressionPlusContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ArithmeticExpressionNegation</c>
	/// labeled alternative in <see cref="kccParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticExpressionNegation([NotNull] kccParser.ArithmeticExpressionNegationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArithmeticExpressionNegation</c>
	/// labeled alternative in <see cref="kccParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticExpressionNegation([NotNull] kccParser.ArithmeticExpressionNegationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LogicalConst</c>
	/// labeled alternative in <see cref="kccParser.logical_entity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalConst([NotNull] kccParser.LogicalConstContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LogicalConst</c>
	/// labeled alternative in <see cref="kccParser.logical_entity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalConst([NotNull] kccParser.LogicalConstContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LogicalVariable</c>
	/// labeled alternative in <see cref="kccParser.logical_entity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalVariable([NotNull] kccParser.LogicalVariableContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LogicalVariable</c>
	/// labeled alternative in <see cref="kccParser.logical_entity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalVariable([NotNull] kccParser.LogicalVariableContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NumericConst</c>
	/// labeled alternative in <see cref="kccParser.numeric_entity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumericConst([NotNull] kccParser.NumericConstContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NumericConst</c>
	/// labeled alternative in <see cref="kccParser.numeric_entity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumericConst([NotNull] kccParser.NumericConstContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NumericVariable</c>
	/// labeled alternative in <see cref="kccParser.numeric_entity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumericVariable([NotNull] kccParser.NumericVariableContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NumericVariable</c>
	/// labeled alternative in <see cref="kccParser.numeric_entity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumericVariable([NotNull] kccParser.NumericVariableContext context);
}
