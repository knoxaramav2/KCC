//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:/Dev/C#/KCC/Antlr\kcc.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="kccParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface IkccListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.trules"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrules([NotNull] kccParser.TrulesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.trules"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrules([NotNull] kccParser.TrulesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] kccParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] kccParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.class"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass([NotNull] kccParser.ClassContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.class"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass([NotNull] kccParser.ClassContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.cmpnd_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCmpnd_expr([NotNull] kccParser.Cmpnd_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.cmpnd_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCmpnd_expr([NotNull] kccParser.Cmpnd_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.smpl_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSmpl_expr([NotNull] kccParser.Smpl_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.smpl_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSmpl_expr([NotNull] kccParser.Smpl_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterId([NotNull] kccParser.IdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitId([NotNull] kccParser.IdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.logic_id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogic_id([NotNull] kccParser.Logic_idContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.logic_id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogic_id([NotNull] kccParser.Logic_idContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.control_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterControl_block([NotNull] kccParser.Control_blockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.control_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitControl_block([NotNull] kccParser.Control_blockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.control_id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterControl_id([NotNull] kccParser.Control_idContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.control_id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitControl_id([NotNull] kccParser.Control_idContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.binary_arith_ops"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinary_arith_ops([NotNull] kccParser.Binary_arith_opsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.binary_arith_ops"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinary_arith_ops([NotNull] kccParser.Binary_arith_opsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.unary_ops"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary_ops([NotNull] kccParser.Unary_opsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.unary_ops"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary_ops([NotNull] kccParser.Unary_opsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.binary_logic_ops"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinary_logic_ops([NotNull] kccParser.Binary_logic_opsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.binary_logic_ops"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinary_logic_ops([NotNull] kccParser.Binary_logic_opsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.arith_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArith_expr([NotNull] kccParser.Arith_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.arith_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArith_expr([NotNull] kccParser.Arith_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="kccParser.logic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogic_expr([NotNull] kccParser.Logic_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="kccParser.logic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogic_expr([NotNull] kccParser.Logic_exprContext context);
}
